/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.book;

import communication.Communication;
import communication.Response;
import componentTable.TableModelAuthor;
import componentTable.TableModelBook;
import componentTable.TableModelChosenAuthors;
import domain.Author;
import domain.AuthorBook;
import domain.Book;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import mode.FormMode;

/**
 *
 * @author Jelena
 */
public class frmBook extends javax.swing.JDialog {

    /**
     * Creates new form frmNovaKnjiga
     */
    FormMode formMode;
    Book book;
    TableModelBook tmb;
    TableModelChosenAuthors tmca;
    TableModelAuthor tma;

    public frmBook(java.awt.Frame parent, boolean modal, FormMode formMode, Book book, TableModelBook tmb) {
        super(parent, modal);
        initComponents();
        this.formMode = formMode;
        this.book = book;
        this.tmb = tmb;
        //fillCmbAuthors();
        //prepareForm();
        setupComponents();
        setTitle("Book");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelKnjiga = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtTitle = new javax.swing.JTextField();
        txtPublication = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        btnChooseAuthors = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblAuthors = new javax.swing.JTable();
        btnRemove = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        panelKnjiga.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Book", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 18))); // NOI18N

        jLabel2.setText("Title");

        jLabel3.setText("Year of publication:");

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel5.setText("Quantity:");

        btnChooseAuthors.setText("Choose authors");
        btnChooseAuthors.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnChooseAuthorsActionPerformed(evt);
            }
        });

        jLabel4.setText("Author:");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Chosen author(s)"));

        tblAuthors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblAuthors);

        btnRemove.setFont(new java.awt.Font("Segoe UI", 0, 16)); // NOI18N
        btnRemove.setText("Remove author");
        btnRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRemoveActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnRemove)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnRemove)
                .addContainerGap())
        );

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelKnjigaLayout = new javax.swing.GroupLayout(panelKnjiga);
        panelKnjiga.setLayout(panelKnjigaLayout);
        panelKnjigaLayout.setHorizontalGroup(
            panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKnjigaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(panelKnjigaLayout.createSequentialGroup()
                        .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelKnjigaLayout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(71, 71, 71)
                                .addComponent(btnChooseAuthors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, panelKnjigaLayout.createSequentialGroup()
                                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel5))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtPublication)
                                        .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(txtQuantity, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 239, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 22, Short.MAX_VALUE))
                    .addGroup(panelKnjigaLayout.createSequentialGroup()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        panelKnjigaLayout.setVerticalGroup(
            panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelKnjigaLayout.createSequentialGroup()
                .addContainerGap(11, Short.MAX_VALUE)
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtPublication, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnChooseAuthors)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addGroup(panelKnjigaLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(panelKnjiga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(panelKnjiga, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        try {
            String message = "";
            if (txtTitle.getText().trim().equals("") || txtTitle.getText().trim() == null) {
                message += "Enter the title of the book!\n";
            }
            if (txtPublication.getText().trim().equals("") || txtPublication.getText().trim() == null || txtPublication.getText().trim().matches("[a-zA-Z]+")) {
                message += "Enter the year the book was published!\n";
            }

            if (txtQuantity.getText().trim().equals("") || txtQuantity.getText().trim() == null
                    || txtQuantity.getText().trim().matches("[a-zA-Z]+")
                    || Integer.parseInt(txtQuantity.getText().trim()) < 0) {
                message += "Enter the quantity the book!\n";
            }

            List<Author> authors = new ArrayList<>();
            for (AuthorBook ab : tmca.getAuthorsbooks()) {
                authors.add(ab.getAuthor());
            }

            if (authors.isEmpty()) {
                message += "Choose author(s) of the book!\n";
            }

            if (!message.equals("")) {
                JOptionPane.showMessageDialog(this, message);
            } else {
                book = new Book();

                book.setTitle(txtTitle.getText().trim());
                book.setPublication(Integer.parseInt(txtPublication.getText().trim()));
                book.setQuantity(Integer.parseInt(txtQuantity.getText().trim()));

                book.setAuthors(authors);
                book.setId(Communication.getInstance().addBook(book).getId());

                tmb.addBook(book);
                JOptionPane.showMessageDialog(this, "Book saved successfully!");
                this.dispose();
                txtTitle.setText("");
                txtPublication.setText("");
                txtQuantity.setText("");
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to save book!");
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        try {
            String message = "";
            if (txtTitle.getText().trim().equals("") || txtTitle.getText().trim() == null) {
                message += "Enter the title of the book!\n";
            }
            if (txtPublication.getText().trim().equals("") || txtPublication.getText().trim() == null || txtPublication.getText().trim().matches("[a-zA-Z]+")) {
                message += "Enter the year the book was published!\n";
            }

            if (txtQuantity.getText().trim().equals("") || txtQuantity.getText().trim() == null
                    || txtQuantity.getText().trim().matches("[a-zA-Z]+")
                    || Integer.parseInt(txtQuantity.getText().trim()) < 0) {
                message += "Enter the quantity the book!\n";
            }
            List<Author> authors = new ArrayList<>();
            for (AuthorBook ab : tmca.getAuthorsbooks()) {
                authors.add(ab.getAuthor());
            }

            if (authors.isEmpty()) {
                message += "Choose author(s) of the book!\n";
            }

            if (!message.equals("")) {
                JOptionPane.showMessageDialog(this, message);
            } else {
                Book editedBook = new Book();
                editedBook.setTitle(txtTitle.getText().trim());
                editedBook.setPublication(Integer.parseInt(txtPublication.getText().trim()));
                editedBook.setQuantity(Integer.parseInt(txtQuantity.getText().trim()));

                editedBook.setAuthors(authors);

                editedBook.setId(book.getId());
                Communication.getInstance().editBook(editedBook);
                tmb.refreshTable();
                JOptionPane.showMessageDialog(this, "Book saved successfully!");
                this.dispose();

            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to save book!");
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnChooseAuthorsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnChooseAuthorsActionPerformed
        new frmChooseAuthor(null, rootPaneCheckingEnabled, tmca).setVisible(true);
    }//GEN-LAST:event_btnChooseAuthorsActionPerformed

    private void btnRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRemoveActionPerformed
        int row = tblAuthors.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "No row selected!");
            return;
        }
        if (row >= 0) {
            tmca = (TableModelChosenAuthors) tblAuthors.getModel();
            tmca.deleteAuthor(row);
        }
    }//GEN-LAST:event_btnRemoveActionPerformed

    /**
     * @param args the command line arguments
     */
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnChooseAuthors;
    private javax.swing.JButton btnRemove;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel panelKnjiga;
    private javax.swing.JTable tblAuthors;
    private javax.swing.JTextField txtPublication;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtTitle;
    // End of variables declaration//GEN-END:variables

    private void setupComponents() {
        switch (formMode) {
            case FORM_ADD:
                btnAdd.setEnabled(true);
                btnUpdate.setEnabled(false);
                txtTitle.setEnabled(true);
                txtPublication.setEnabled(true);
                txtQuantity.setEnabled(true);
                 {
                    try {
                        tmca = new TableModelChosenAuthors();
                        tblAuthors.setModel(tmca);

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "It is not possible to show authors!");
                    }
                }
                //cmbAuthor.setEnabled(true);
                //cmbAuthor.setSelectedItem("Choose author");
                break;

            case FORM_EDIT:
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(true);
                txtTitle.setEnabled(true);
                txtPublication.setEnabled(true);
                txtQuantity.setEnabled(true);
                 {
                    try {
                        tmca = new TableModelChosenAuthors(book);
                        tblAuthors.setModel(tmca);

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "It is not possible to show authors!");
                    }
                }
                txtTitle.setText(book.getTitle() + "");
                txtPublication.setText(book.getPublication() + "");
                txtQuantity.setText(book.getQuantity() + "");
                break;

            case FORM_VIEW:
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                btnRemove.setEnabled(false);
                btnChooseAuthors.setEnabled(false);
                txtTitle.setEditable(false);
                txtPublication.setEditable(false);
                txtQuantity.setEditable(false);
                 {
                    try {
                        tblAuthors.setModel(new TableModelChosenAuthors(book));

                    } catch (Exception ex) {
                        JOptionPane.showMessageDialog(this, "It is not possible to show authors!");
                    }
                }
                txtTitle.setText(book.getTitle() + "");
                txtPublication.setText(book.getPublication() + "");
                txtQuantity.setText(book.getQuantity() + "");

                break;

        }
    }

    /*private void fillCmbAuthors() {
        try {
            cmbAuthor.removeAllItems();
            cmbAuthor.addItem("Choose author");
            List<Author> authors = Communication.getInstance().getAllAuthors();
            for (Author author : authors) {
                cmbAuthor.addItem(author);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to fill authors!");
        }
    }*/
    private void prepareForm() {
//        try {
//            tmca = new TableModelChosenAuthors();
//            tblAuthors.setModel(tmca);
//        } catch (Exception ex) {
//            Logger.getLogger(frmBook.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }
}
