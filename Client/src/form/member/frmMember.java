/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package form.member;

import communication.Communication;
import componentTable.TableModelMember;
import domain.Administrator;
import domain.Member;
import domain.MemberType;
import domain.Rental;
import form.book.frmBook;
import java.awt.Frame;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import mode.FormMode;

/**
 *
 * @author Jelena
 */
public class frmMember extends javax.swing.JDialog {

    /**
     * Creates new form frmNoviClan
     */
    FormMode formMode;
    Member member;
    TableModelMember tmm;
    Administrator administrator;

    public frmMember(java.awt.Frame parent, boolean modal, FormMode formMode, Member member, TableModelMember tmm, Administrator administrator) {
        super(parent, modal);
        initComponents();
        this.formMode = formMode;
        this.member = member;
        this.tmm = tmm;
        this.administrator = administrator;
        fillCmbMemberType();
        setupComponents();
        setTitle("Member");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        cmbMemberType = new javax.swing.JComboBox();
        jLabel8 = new javax.swing.JLabel();
        txtLastname = new javax.swing.JTextField();
        txtFirstname = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txtBirthdate = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtAdministrator = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Member"));

        jLabel7.setText("Member type:");

        jLabel8.setText("Firstname:");

        jLabel9.setText("Lastname:");

        jLabel10.setText("Birthdate:");

        btnAdd.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel11.setText("Administrator:");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 167, Short.MAX_VALUE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel8)
                                        .addComponent(jLabel9))
                                    .addGap(49, 49, 49))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(jLabel7))
                                    .addGap(29, 29, 29)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel11)
                                .addGap(28, 28, 28)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtAdministrator)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                        .addComponent(txtFirstname, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
                                        .addComponent(txtLastname))
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(txtBirthdate, javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cmbMemberType, javax.swing.GroupLayout.Alignment.LEADING, 0, 279, Short.MAX_VALUE)))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtFirstname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtLastname, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBirthdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbMemberType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtAdministrator, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 36, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate))
                .addGap(24, 24, 24))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    SimpleDateFormat format = new SimpleDateFormat("dd.MM.yyyy.");

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        String message = "";
        if (txtFirstname.getText().trim().equals("") || txtFirstname.getText().trim() == null) {
            message += "Enter the member's firstname!\n";
        }
        if (txtLastname.getText().trim().equals("") || txtLastname.getText().trim() == null) {
            message += "Enter the member's lastname!\n";
        }
        if (txtBirthdate.getText().trim().equals("") || txtBirthdate.getText().trim() == null || txtBirthdate.getText().trim().matches("[a-zA-Z]+")) {
            message += "Enter the member's birthdata!\n";
        }
        if (cmbMemberType.getSelectedItem().equals("Choose member type")) {
            message += "Choose member type!\n";
        }

        if (!message.equals("")) {
            JOptionPane.showMessageDialog(this, message);
        } else {
            try {
                String date = txtBirthdate.getText().trim();
                member = new Member();
                member.setFirstname(txtFirstname.getText().trim());
                member.setLastname(txtLastname.getText().trim());
                member.setBirthdate(format.parse(date));
                member.setMemberType((MemberType) cmbMemberType.getSelectedItem());
                member.setAdministrator(administrator);
                member.setId(Communication.getInstance().addMember(member).getId());
                tmm.addMember(member);
                JOptionPane.showMessageDialog(this, "Member saved successfully!");
                this.dispose();
                txtFirstname.setText("");
                txtLastname.setText("");
                txtBirthdate.setText("");
                cmbMemberType.setSelectedItem("Choose member type");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Unable to save member!");
            }
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        String message = "";
        if (txtFirstname.getText().trim().equals("") || txtFirstname.getText().trim() == null) {
            message += "Enter the member's firstname!\n";
        }
        if (txtLastname.getText().trim().equals("") || txtLastname.getText().trim() == null) {
            message += "Enter the member's lastname!\n";
        }
        if (txtBirthdate.getText().trim().equals("") || txtBirthdate.getText().trim() == null || txtBirthdate.getText().trim().matches("[a-zA-Z]+")) {
            message += "Enter the member's birthdata!\n";
        }
        if (cmbMemberType.getSelectedItem().equals("Choose member type")) {
            message += "Choose member type!\n";
        }

        if (!message.equals("")) {
            JOptionPane.showMessageDialog(this, message);
        } else {
            try {
                String date = txtBirthdate.getText().trim();
                Date birthdate = format.parse(date);
                Member editedMember = new Member();
                editedMember.setFirstname(txtFirstname.getText().trim());
                editedMember.setLastname(txtLastname.getText().trim());
                editedMember.setBirthdate(birthdate);
                editedMember.setMemberType((MemberType) cmbMemberType.getSelectedItem());
                editedMember.setAdministrator(administrator);
                editedMember.setId(member.getId());
                
                Communication.getInstance().editMember(editedMember);
                tmm.refreshTable();
                JOptionPane.showMessageDialog(this, "Member saved successfully!");

                this.dispose();

            } catch (ParseException ex) {
                JOptionPane.showMessageDialog(this, "Unable to save member!");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Unable to save member!");
            }
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox cmbMemberType;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField txtAdministrator;
    private javax.swing.JTextField txtBirthdate;
    private javax.swing.JTextField txtFirstname;
    private javax.swing.JTextField txtLastname;
    // End of variables declaration//GEN-END:variables

    private void fillCmbMemberType() {
        try {
            cmbMemberType.removeAllItems();
            cmbMemberType.addItem("Choose member type");
            List<MemberType> memberTypes = Communication.getInstance().getAllMemberType();
            for (MemberType memberType : memberTypes) {
                cmbMemberType.addItem(memberType);
            }
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(this, "Unable to fill member types!");
        }
    }

    private void setupComponents() {

        switch (formMode) {
            case FORM_ADD:
                btnAdd.setEnabled(true);
                btnUpdate.setEnabled(false);
                txtFirstname.setEnabled(true);
                txtLastname.setEnabled(true);
                txtBirthdate.setEnabled(true);
                txtAdministrator.setEnabled(false);
                txtAdministrator.setText(administrator + "");
                cmbMemberType.setEnabled(true);
                cmbMemberType.setSelectedItem("Choose member type");
                break;
            case FORM_EDIT:
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(true);
                txtFirstname.setEnabled(true);
                txtLastname.setEnabled(true);
                txtBirthdate.setEnabled(true);
                cmbMemberType.setEnabled(true);
                txtAdministrator.setEnabled(false);
                cmbMemberType.setSelectedItem("Choose member type");
                txtFirstname.setText(member.getFirstname());
                txtLastname.setText(member.getLastname());
                txtBirthdate.setText(format.format(member.getBirthdate()));
                txtAdministrator.setText(member.getAdministrator() + "");
                cmbMemberType.setSelectedItem(member.getMemberType());
                break;
            case FORM_VIEW:
                btnAdd.setEnabled(false);
                btnUpdate.setEnabled(false);
                txtFirstname.setEditable(false);
                txtLastname.setEditable(false);
                txtBirthdate.setEditable(false);
                txtAdministrator.setEnabled(false);
                cmbMemberType.setEnabled(false);
                cmbMemberType.setSelectedItem("Choose member type");
                txtFirstname.setText(member.getFirstname() + "");
                txtLastname.setText(member.getLastname() + "");
                txtBirthdate.setText(member.getBirthdate() + "");
                cmbMemberType.setSelectedItem(member.getMemberType());
                txtAdministrator.setText(member.getAdministrator() + "");
                break;
        }
    }
}
